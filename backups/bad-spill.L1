(
(:main
	(rsp -= 8)
	:main
	(call :__L3main__)
	(rsp += 8)
	(return)
	)
(:__L3main__
	(rsp -= 8)
	(rdi <- 11)
	(rsi <- 31)
	(call :sum_of_squares)
	(rax <- (print rax))
	(rsp += 8)
	(return)
	)
(:sum_of_squares
	(rsp -= 72)
	((mem rsp 32) <- rdi) ; rdi gets spilled to 32. this should be "lower"
	((mem rsp 16) <- rsi) ; rsi gets spilled to 16. this should be "upper"
	(rax <- (mem rsp 32)) ; rax <- rdi ; rax <- lower
	(rsi <- (mem rsp 16)) ; rsi <- rsi ; rsi <- upper
	(rax <- rax = rsi)    ; check if lower = upper
	(rax <<= 1)           ; rax *= 2
	(rax += 1)            ; rax += 1, standard number conversion.
	(cjump rax = 3 :_tempL3_1 :_tempL3_2) ; goto $ if true tempL3_1 else tempL3_2
	:_tempL3_1             ; upper = lower
	(rax <- (mem rsp 32))
	(rax >>= 1)
	(rcx <- (mem rsp 32))
	((mem rsp 64) <- rcx)
	(rcx <- (mem rsp 64))
	(rcx >>= 1)
	((mem rsp 64) <- rcx)
	(rcx <- (mem rsp 64))
	(rcx *= rax)
	((mem rsp 64) <- rcx)
	(rax <- (mem rsp 64))
	(rax <<= 1)
	((mem rsp 64) <- rax)
	(rax <- (mem rsp 64))
	(rax += 1)
	((mem rsp 64) <- rax)
	(rax <- (allocate 1 1))
	(rdi <- (mem rsp 64))
	(rsi <- rax)
	(rsp += 72)
	(tail-call :__tempL4L2)
	:_tempL3_2               ; upper > lower
	(rax <- (mem rsp 32))  ; rax <- lower
	(rax >>= 1)
	(rsi <- (mem rsp 32))
	((mem rsp 0) <- rsi)
	(rsi <- (mem rsp 0))
	(rsi >>= 1)
	((mem rsp 0) <- rsi)
	(rsi <- (mem rsp 0))
	(rsi *= rax)
	((mem rsp 0) <- rsi)
	(rax <- (mem rsp 0))
	(rax <<= 1)
	((mem rsp 0) <- rax)
	(rax <- (mem rsp 0))
	(rax += 1)
	((mem rsp 0) <- rax)
	(rax <- (mem rsp 32))
	(rax += 3)
	(rax -= 1)
	(rdi <- rax)
	(rsi <- (mem rsp 16))
	(call :sum_of_squares)
	(rcx <- (mem rsp 0))
	((mem rsp 48) <- rcx)
	(rcx <- (mem rsp 48))
	(rcx += rax)
	((mem rsp 48) <- rcx)
	(rax <- (mem rsp 48))
	(rax -= 1)
	((mem rsp 48) <- rax)
	(rax <- (allocate 1 1))
	(rdi <- (mem rsp 48))
	(rsi <- rax)
	(rsp += 72)
	(tail-call :__tempL4L2)
	)
(:__tempL4L2
	(rsp -= 8)
	(rax <- rdi)
	(rcx <- rsi)
	(rsp += 8)
	(return)
	)
)
