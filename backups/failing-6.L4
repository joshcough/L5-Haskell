((print 
  (let [x (new-tuple 1 2)] 
    (let [l50 
              (let [l51 (make-closure :l52 (new-tuple))] 
                ((closure-proc l51) (closure-vars l51) (make-closure :l53 (new-tuple))))] 
      ((closure-proc l50) (closure-vars l50) x 0))))

(:l52 (frees x) x) 
(:l53 (frees x y) (aref x y)))

; l51 = (make-closure :l52 [])
; l50 = :l52 [] (make-closure :l53 (new-tuple))
; l50 =  (make-closure :l53 (new-tuple))
; x = [1, 2]

; print arg = :l53 [] [1, 2] 0
; print arg = aref [1, 2] 0
; print arg = 1

