((
  (rsp -= 16)
  (rax <- (allocate 9 3)) ; size 4 array of 1's. you can only allocate into rax.
  (rdi <- rax) ; save the array pointer in rdi

  ((mem rdi 0)  <- 5) ; set the first element to 2
  ((mem rdi 8)  <- 7) ; set the first element to 3
  ((mem rdi 16) <- 9) ; set the first element to 4
  ((mem rdi 24) <- 11) ; set the first element to 5

  ; print the elements in the array and print them

  (rsi <- (mem rdi 0)) ; put the 1st element into rdi
  ((mem rsp 0) <- rsi) ; save rsi
  ((mem rsp 8) <- rdi) ; save rdi
  (rax <- (print rsi)) ; print it
  (rdi <- (mem rsp 8)) ; restore rdi
  (rsi <- (mem rsp 0)) ; restore rsi

  (rsi <- (mem rdi 8)) ; put the 2nd element into rdi
  ((mem rsp 0) <- rsi) ; save rsi
  ((mem rsp 8) <- rdi) ; save rdi
  (rax <- (print rsi)) ; print it
  (rdi <- (mem rsp 8)) ; restore rdi
  (rsi <- (mem rsp 0)) ; restore rsi

  (rsi <- (mem rdi 16)) ; put the 3rd element into rdi
  ((mem rsp 0) <- rsi) ; save rsi
  ((mem rsp 8) <- rdi) ; save rdi
  (rax <- (print rsi)) ; print it
  (rdi <- (mem rsp 8)) ; restore rdi
  (rsi <- (mem rsp 0)) ; restore rsi

  (rsi <- (mem rdi 24)) ; put the 4th element into rdi
  ((mem rsp 0) <- rsi) ; save rsi
  ((mem rsp 8) <- rdi) ; save rdi
  (rax <- (print rsi)) ; print it
  (rdi <- (mem rsp 8)) ; restore rdi
  (rsi <- (mem rsp 0)) ; restore rsi
  (rsp += 16)
))
