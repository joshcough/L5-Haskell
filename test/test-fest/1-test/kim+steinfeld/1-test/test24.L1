(
(
  (rcx <- 11)
  (rax <- (allocate rcx 5))
  ((mem rax 4) <- 13)
  ((mem rax 8) <- 19)
  ((mem rax 12) <- 29)
  ((mem rax 16) <- 51)
  ((mem rax 20) <- 79)
  (rcx <- 20)
  (call :reverse)
  (rax <- (print rax))
)
(:reverse
  (rdx <- rcx)
  (rsi <- 4)
  (rsi += rax)
  (rdx += rax)
  :loop
  (cjump rsi = rdx :else :if )
  :if  
  (rdi <- (mem rsi 0))
  (rbx <- (mem rdx 0))
  ((mem rsi 0) <- rbx)
  ((mem rdx 0) <- rdi)
  (rsi += 4)
  (rdx -= 4)
  (goto :loop)
  :else
  (return)
)
)
