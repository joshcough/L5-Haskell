;;2
(((rax <- (allocate 5 3))
  (rcx <- rax)
  ((mem rcx 0) <- 6)
  ((mem rcx 4) <- 1)
  (call :function)
  (rax <- (mem rcx 4))
  (rax += 1)
  (rax <- (print rax)))
 (:function 
  (rdx <- (mem rcx 0))
  (cjump 1 < rdx :recur :done)
  :recur
  (rsi <- rdx)
  (rsi >>= 1)
  ((mem rcx 0) <- rsi)
  (rsi <- (mem rcx 4))
  (rsi <<= 1)
  ((mem rcx 4) <- rsi)
  (call :function)
  (return)
  :done
  (return)))