((
  (rax <- 11)
  (rbx <- 7)
  (rcx <- 3)
  (call :exp)
  (res <- rax)
  (rax <- (print res))
 )
 (:exp
  (x <- rax)
  (y <- rbx)
  (r <- rcx)
  (test <- y = 1)
  (test <<= 1)
  (test += 1)
  (cjump 3 = test :then :else)
  :then
  (rax <- r)
  (return)
  :else
  (newr <- r)
  (newr >>= 1)
  (x >>= 1)
  (newr *= x)
  (x <<= 1)
  (x += 1)
  (newr <<= 1)
  (newr += 1)
  (newy <- y)
  (newy -= 3)
  (newy += 1)
  (rax <- x)
  (rbx <- newy)
  (rcx <- newr)
  (tail-call :exp)
  ))