

src/L/Interpreter/Runtime.hs:18:10: Warning:
    ‘Runtime’ is an instance of Monad but not Applicative - this will become an error in GHC 7.10, under the Applicative-Monad Proposal.
[16 of 43] Compiling L.Interpreter.Memory ( src/L/Interpreter/Memory.hs, dist/build/L/Interpreter/Memory.o )
[17 of 43] Compiling L.Interpreter.HOComputer ( src/L/Interpreter/HOComputer.hs, dist/build/L/Interpreter/HOComputer.o )

src/L/Interpreter/HOComputer.hs:94:13: Warning:
    Defaulting the following constraint(s) to type ‘Integer’
      (Show t0)
        arising from a use of ‘show’
        at src/L/Interpreter/HOComputer.hs:94:13-16
      (Num t0)
        arising from the literal ‘0’
        at src/L/Interpreter/HOComputer.hs:95:50
      (Enum t0)
        arising from the arithmetic sequence ‘0 .. ’
        at src/L/Interpreter/HOComputer.hs:95:49-53
    In the expression: show
    In the expression: show $ map (second show) memList
    In an equation for ‘showMem’:
        showMem m
          = show $ map (second show) memList
          where
              memList
                = filter (\ (_, r) -> Num 0 /= r) . zip [0 .. ] $ Vector.toList m
[18 of 43] Compiling L.Interpreter.X86Computer ( src/L/Interpreter/X86Computer.hs, dist/build/L/Interpreter/X86Computer.o )
[19 of 43] Compiling L.L1.L1Interp    ( src/L/L1/L1Interp.hs, dist/build/L/L1/L1Interp.o )
[20 of 43] Compiling L.L2.L2Interp    ( src/L/L2/L2Interp.hs, dist/build/L/L2/L2Interp.o )

src/L/L2/L2Interp.hs:58:10: Warning:
    Orphan instance:
      instance HasX86Computer r t a => HasX86Computer (l, r) t a

src/L/L2/L2Interp.hs:61:10: Warning:
    Orphan instance: instance HasMemory r s a => HasMemory (l, r) s a
[21 of 43] Compiling L.L3.L3Interp    ( src/L/L3/L3Interp.hs, dist/build/L/L3/L3Interp.o )
[22 of 43] Compiling L.L3.Linearize   ( src/L/L3/Linearize.hs, dist/build/L/L3/Linearize.o )
[23 of 43] Compiling L.L2.Liveness    ( src/L/L2/Liveness.hs, dist/build/L/L2/Liveness.o )
[24 of 43] Compiling L.L2.Interference ( src/L/L2/Interference.hs, dist/build/L/L2/Interference.o )

src/L/L2/Interference.hs:29:10: Warning:
    Orphan instance: instance HasVars (S.Set L2X)

src/L/L2/Interference.hs:35:10: Warning:
    Orphan instance: instance HasVars InterferenceGraph
[25 of 43] Compiling L.L2.Spill       ( src/L/L2/Spill.hs, dist/build/L/L2/Spill.o )
[26 of 43] Compiling L.L2.Allocation  ( src/L/L2/Allocation.hs, dist/build/L/L2/Allocation.o )

src/L/L2/Allocation.hs:35:50: Warning:
    Defined but not used: ‘liveRangesList’

src/L/L2/Allocation.hs:84:3: Warning:
    Defined but not used: ‘instructions’

src/L/L2/Allocation.hs:85:3: Warning:
    Defined but not used: ‘registerMappings’

src/L/L2/Allocation.hs:86:3: Warning:
    Defined but not used: ‘nrVariablesSpilled’

src/L/L2/Allocation.hs:87:3: Warning:
    Defined but not used: ‘liveRangesList’
[27 of 43] Compiling L.L4.L4AST       ( src/L/L4/L4AST.hs, dist/build/L/L4/L4AST.o )
[28 of 43] Compiling L.L4.ANormalize  ( src/L/L4/ANormalize.hs, dist/build/L/L4/ANormalize.o )

src/L/L4/ANormalize.hs:4:1: Warning:
    The import of ‘Control.Monad’ is redundant
      except perhaps to import instances from ‘Control.Monad’
    To import instances alone, use: import Control.Monad()

src/L/L4/ANormalize.hs:11:1: Warning:
    The import of ‘L.Parser.Supply’ is redundant
      except perhaps to import instances from ‘L.Parser.Supply’
    To import instances alone, use: import L.Parser.Supply()

src/L/L4/ANormalize.hs:12:1: Warning:
    The import of ‘L.Primitives’ is redundant
      except perhaps to import instances from ‘L.Primitives’
    To import instances alone, use: import L.Primitives()
[29 of 43] Compiling L.L4.L4Interp    ( src/L/L4/L4Interp.hs, dist/build/L/L4/L4Interp.o )
[30 of 43] Compiling L.L5.L5AST       ( src/L/L5/L5AST.hs, dist/build/L/L5/L5AST.o )

src/L/L5/L5AST.hs:4:1: Warning:
    The import of ‘Control.Monad’ is redundant
      except perhaps to import instances from ‘Control.Monad’
    To import instances alone, use: import Control.Monad()

src/L/L5/L5AST.hs:7:1: Warning:
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()

src/L/L5/L5AST.hs:8:1: Warning:
    The import of ‘Data.List’ is redundant
      except perhaps to import instances from ‘Data.List’
    To import instances alone, use: import Data.List()

src/L/L5/L5AST.hs:10:1: Warning:
    The import of ‘Data.Set’ is redundant
      except perhaps to import instances from ‘Data.Set’
    To import instances alone, use: import Data.Set()

src/L/L5/L5AST.hs:11:1: Warning:
    The qualified import of ‘Data.Set’ is redundant
      except perhaps to import instances from ‘Data.Set’
    To import instances alone, use: import Data.Set()

src/L/L5/L5AST.hs:17:1: Warning:
    The import of ‘Prelude.Extras’ is redundant
      except perhaps to import instances from ‘Prelude.Extras’
    To import instances alone, use: import Prelude.Extras()
[31 of 43] Compiling L.L5.L5Interp    ( src/L/L5/L5Interp.hs, dist/build/L/L5/L5Interp.o )
[32 of 43] Compiling L.L5.LambdaLifter ( src/L/L5/LambdaLifter.hs, dist/build/L/L5/LambdaLifter.o )

src/L/L5/LambdaLifter.hs:52:1: Warning: Defined but not used: ‘l5c’
[33 of 43] Compiling L.OS             ( src/L/OS.hs, dist/build/L/OS.o )
[34 of 43] Compiling L.L1.L1X86       ( src/L/L1/L1X86.hs, dist/build/L/L1/L1X86.o )

src/L/L1/L1X86.hs:4:1: Warning:
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead
[35 of 43] Compiling L.Compiler       ( src/L/Compiler.hs, dist/build/L/Compiler.o )
[36 of 43] Compiling L.L1.L1          ( src/L/L1/L1.hs, dist/build/L/L1/L1.o )
[37 of 43] Compiling L.L2.L2          ( src/L/L2/L2.hs, dist/build/L/L2/L2.o )
[38 of 43] Compiling L.L3.L3          ( src/L/L3/L3.hs, dist/build/L/L3/L3.o )
[39 of 43] Compiling L.L4.L4          ( src/L/L4/L4.hs, dist/build/L/L4/L4.o )
[40 of 43] Compiling L.L5.L5          ( src/L/L5/L5.hs, dist/build/L/L5/L5.o )
[41 of 43] Compiling L.ReplTools      ( src/L/ReplTools.hs, dist/build/L/ReplTools.o )
[42 of 43] Compiling L.CommandLine    ( src/L/CommandLine.hs, dist/build/L/CommandLine.o )
[43 of 43] Compiling L                ( src/L.hs, dist/build/L.o )
In-place registering l-0.1.0.0...
Preprocessing executable 'lc' for l-0.1.0.0...
[1 of 1] Compiling Main             ( executables/LC.hs, dist/build/lc/lc-tmp/Main.dyn_o )
Linking dist/build/lc/lc ...
Preprocessing executable 'linterp' for l-0.1.0.0...
[1 of 1] Compiling Main             ( executables/LInterp.hs, dist/build/linterp/linterp-tmp/Main.dyn_o )
Linking dist/build/linterp/linterp ...
Preprocessing executable 'liveness' for l-0.1.0.0...
[1 of 1] Compiling Main             ( executables/other/Liveness.hs, dist/build/liveness/liveness-tmp/Main.dyn_o )
Linking dist/build/liveness/liveness ...
Preprocessing executable 'interference' for l-0.1.0.0...
[1 of 1] Compiling Main             ( executables/other/Interference.hs, dist/build/interference/interference-tmp/Main.dyn_o )
Linking dist/build/interference/interference ...
MacBook-Pro:L5-Haskell joshcough$ 
